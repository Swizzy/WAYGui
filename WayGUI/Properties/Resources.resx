<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectPort" xml:space="preserve">
    <value>Please select a port to use!</value>
  </data>
  <data name="SelectMemory" xml:space="preserve">
    <value>Please select a memory device to work with!</value>
  </data>
  <data name="ProtectionDisable" xml:space="preserve">
    <value>Disable Protection</value>
  </data>
  <data name="ProtectionEnable" xml:space="preserve">
    <value>Enable Protection</value>
  </data>
  <data name="EraseDisable" xml:space="preserve">
    <value>Disable Erase</value>
  </data>
  <data name="EraseEnable" xml:space="preserve">
    <value>Enable Erase</value>
  </data>
  <data name="FilterExe" xml:space="preserve">
    <value>Windows Executables|*.exe|All Files|*.*</value>
  </data>
  <data name="SelectPythonPath" xml:space="preserve">
    <value>Select where you have installed Python</value>
  </data>
  <data name="FilterPy" xml:space="preserve">
    <value>Python scripts|*.py|All Files|*.*</value>
  </data>
  <data name="SelectNORwayOrNANDWay" xml:space="preserve">
    <value>Select NORway.py or NANDWay.py</value>
  </data>
  <data name="SelectPythonPathInTools" xml:space="preserve">
    <value>Please select Python path in the tools menu!</value>
  </data>
  <data name="SelectNORwayAndNANDWayInTools" xml:space="preserve">
    <value>Please Select NORway.py &amp; NANDWay.py Path in the tools menu!</value>
  </data>
  <data name="SelectSaveDump" xml:space="preserve">
    <value>Select where to save yor dump</value>
  </data>
  <data name="SelectSaveDumps" xml:space="preserve">
    <value>Select where to save your dumps</value>
  </data>
  <data name="FilterBin" xml:space="preserve">
    <value>Binary files|*.bin|All Files|*.*</value>
  </data>
  <data name="SelectFileToWrite" xml:space="preserve">
    <value>Select file to write</value>
  </data>
  <data name="SelectVerifyFile" xml:space="preserve">
    <value>Select file to verify NOR against</value>
  </data>
  <data name="ErrorHorrible" xml:space="preserve">
    <value>ERROR: Something went horribly wrong!!</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="ErrorWhileSavingScriptPath" xml:space="preserve">
    <value>ERROR: Something went wrong while saving the script path, you'll probably need to select the path again next time you run the app...</value>
  </data>
  <data name="UnableToSearchForNORWayNANDWayPort" xml:space="preserve">
    <value>Unable to search for NORway/NANDWay port because:
{0}</value>
  </data>
  <data name="NotFoundPython" xml:space="preserve">
    <value>No Python = no go!</value>
  </data>
  <data name="NotFoundNORway" xml:space="preserve">
    <value>No NORway.py = no go!</value>
  </data>
  <data name="NotFoundNANDWay" xml:space="preserve">
    <value>No NANDay.py = no go!</value>
  </data>
  <data name="FilterLog" xml:space="preserve">
    <value>Log files|*.log|All Files|*.*</value>
  </data>
  <data name="SelectSaveLog" xml:space="preserve">
    <value>Select where to save the output log...</value>
  </data>
  <data name="ErrorInitFailed" xml:space="preserve">
    <value>Initilization failed, Python return code: {0}</value>
  </data>
  <data name="ErrorGettingNandInfo" xml:space="preserve">
    <value>ERROR: While getting NAND{1} info: {0}</value>
  </data>
  <data name="ErrorAutoWriteNANDNotSupported" xml:space="preserve">
    <value>Auto Select NAND for write is currently not supported...
</value>
  </data>
  <data name="FilterDiff" xml:space="preserve">
    <value>Diff Files|*.diff|All Files|*.*</value>
  </data>
  <data name="SelectDiffFileToUse" xml:space="preserve">
    <value>Select Diff file to use</value>
  </data>
  <data name="LinkConsoleOpen" xml:space="preserve">
    <value>http://www.consoleopen.com/</value>
  </data>
  <data name="LinkDonate" xml:space="preserve">
    <value>http://donate.xeupd.com/</value>
  </data>
  <data name="LinkHomebrewConnection" xml:space="preserve">
    <value>http://www.homebrew-connection.org/</value>
  </data>
  <data name="ErrorInitNAND1FailedNAND0OK" xml:space="preserve">
    <value>Could only initalize NAND0!
NAND1 failed with: {0}</value>
  </data>
  <data name="ErrorInitNAND0FailedNAND1OK" xml:space="preserve">
    <value>Could only initalize NAND1!
NAND0 failed with: {0}</value>
  </data>
  <data name="ErrorInitNANDFailed" xml:space="preserve">
    <value>Could not initalize NAND0: {0}
Could not initalize NAND1: {1}</value>
  </data>
</root>